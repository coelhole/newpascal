var tipuesearch = {"pages": [
     {"title": "NewPascal.Base", "text": "   ", "tags": "", "url": "NewPascal.Base.html"},
     {"title": "NewPascal.Base.Cloneable", "text": "   ", "tags": "", "url": "NewPascal.Base.Cloneable.html"},
     {"title": "NewPascal.Base.Cloneable.Clone", "text": "    ", "tags": "", "url": "NewPascal.Base.Cloneable.html#Clone"},
     {"title": "NewPascal.Base.Objct", "text": "   ", "tags": "", "url": "NewPascal.Base.Objct.html"},
     {"title": "NewPascal.Base.Objct.Clone", "text": "    ", "tags": "", "url": "NewPascal.Base.Objct.html#Clone"},
     {"title": "NewPascal.Base.Objct.ToString", "text": "    ", "tags": "", "url": "NewPascal.Base.Objct.html#ToString"},
     {"title": "NewPascal.Base.Excptn", "text": "   ", "tags": "", "url": "NewPascal.Base.Excptn.html"},
     {"title": "NewPascal.Base.Excptn.Create", "text": "    ", "tags": "", "url": "NewPascal.Base.Excptn.html#Create"},
     {"title": "NewPascal.Base.Excptn.Create", "text": "    ", "tags": "", "url": "NewPascal.Base.Excptn.html#Create"},
     {"title": "NewPascal.Base.Excptn.Message", "text": "   ", "tags": "", "url": "NewPascal.Base.Excptn.html#Message"},
     {"title": "NewPascal.Base.Error", "text": "   ", "tags": "", "url": "NewPascal.Base.Error.html"},
     {"title": "NewPascal.Base.CloneNotSupportedException", "text": "   ", "tags": "", "url": "NewPascal.Base.CloneNotSupportedException.html"},
     {"title": "NewPascal.Base.RuntimeException", "text": "   ", "tags": "", "url": "NewPascal.Base.RuntimeException.html"},
     {"title": "NewPascal.Base.IllegalArgumentException", "text": "   ", "tags": "", "url": "NewPascal.Base.IllegalArgumentException.html"},
     {"title": "NewPascal.Base.ReflectiveOperationException", "text": "   ", "tags": "", "url": "NewPascal.Base.ReflectiveOperationException.html"},
     {"title": "NewPascal.Base.ClassNotFoundException", "text": "   ", "tags": "", "url": "NewPascal.Base.ClassNotFoundException.html"},
     {"title": "NewPascal.Base.IllegalAccessException", "text": "   ", "tags": "", "url": "NewPascal.Base.IllegalAccessException.html"},
     {"title": "NewPascal.Base.InstantiationException", "text": "   ", "tags": "", "url": "NewPascal.Base.InstantiationException.html"},
     {"title": "NewPascal.Base.InvocationTargetException", "text": "   ", "tags": "", "url": "NewPascal.Base.InvocationTargetException.html"},
     {"title": "NewPascal.Base.NoSuchFieldException", "text": "   ", "tags": "", "url": "NewPascal.Base.NoSuchFieldException.html"},
     {"title": "NewPascal.Base.NoSuchMethodException", "text": "   ", "tags": "", "url": "NewPascal.Base.NoSuchMethodException.html"},
     {"title": "NewPascal.Base.Null", "text": "   ", "tags": "", "url": "NewPascal.Base.html#Null"},
     {"title": "NewPascal.Base.:=", "text": "    ", "tags": "", "url": "NewPascal.Base.html#:="},
     {"title": "NewPascal.Base.Explicit", "text": "    ", "tags": "", "url": "NewPascal.Base.html#Explicit"},
     {"title": "NewPascal.Base.+", "text": "    ", "tags": "", "url": "NewPascal.Base.html#+"},
     {"title": "NewPascal.Base.+", "text": "    ", "tags": "", "url": "NewPascal.Base.html#+"},
     {"title": "NewPascal.Base.+", "text": "    ", "tags": "", "url": "NewPascal.Base.html#+"},
     {"title": "NewPascal.Base.+", "text": "    ", "tags": "", "url": "NewPascal.Base.html#+"},
     {"title": "NewPascal.Base.+", "text": "    ", "tags": "", "url": "NewPascal.Base.html#+"},
     {"title": "NewPascal.Base.+", "text": "    ", "tags": "", "url": "NewPascal.Base.html#+"},
     {"title": "NewPascal.Base.SByte", "text": "   ", "tags": "", "url": "NewPascal.Base.html#SByte"},
     {"title": "NewPascal.Base.Short", "text": "   ", "tags": "", "url": "NewPascal.Base.html#Short"},
     {"title": "NewPascal.Base.UShort", "text": "   ", "tags": "", "url": "NewPascal.Base.html#UShort"},
     {"title": "NewPascal.Base.Int", "text": "   ", "tags": "", "url": "NewPascal.Base.html#Int"},
     {"title": "NewPascal.Base.UInt", "text": "   ", "tags": "", "url": "NewPascal.Base.html#UInt"},
     {"title": "NewPascal.Base.Long", "text": "   ", "tags": "", "url": "NewPascal.Base.html#Long"},
     {"title": "NewPascal.Base.ULong", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ULong"},
     {"title": "NewPascal.Base.Float", "text": "   ", "tags": "", "url": "NewPascal.Base.html#Float"},
     {"title": "NewPascal.Base.ByteArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ByteArray"},
     {"title": "NewPascal.Base.SByteArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#SByteArray"},
     {"title": "NewPascal.Base.ShortArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ShortArray"},
     {"title": "NewPascal.Base.UShortArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#UShortArray"},
     {"title": "NewPascal.Base.IntArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#IntArray"},
     {"title": "NewPascal.Base.UIntArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#UIntArray"},
     {"title": "NewPascal.Base.LongArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#LongArray"},
     {"title": "NewPascal.Base.ULongArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ULongArray"},
     {"title": "NewPascal.Base.DoubleArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#DoubleArray"},
     {"title": "NewPascal.Base.FloatArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#FloatArray"},
     {"title": "NewPascal.Base.CurrencyArray", "text": "   ", "tags": "", "url": "NewPascal.Base.html#CurrencyArray"},
     {"title": "NewPascal.Base.ObjctClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ObjctClass"},
     {"title": "NewPascal.Base.ExcptnClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ExcptnClass"},
     {"title": "NewPascal.Base.ErrorClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ErrorClass"},
     {"title": "NewPascal.Base.CloneNotSupportedExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#CloneNotSupportedExceptionClass"},
     {"title": "NewPascal.Base.RuntimeExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#RuntimeExceptionClass"},
     {"title": "NewPascal.Base.IllegalArgumentExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#IllegalArgumentExceptionClass"},
     {"title": "NewPascal.Base.ReflectiveOperationExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ReflectiveOperationExceptionClass"},
     {"title": "NewPascal.Base.ClassNotFoundExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#ClassNotFoundExceptionClass"},
     {"title": "NewPascal.Base.IllegalAccessExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#IllegalAccessExceptionClass"},
     {"title": "NewPascal.Base.InstantiationExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#InstantiationExceptionClass"},
     {"title": "NewPascal.Base.InvocationTargetExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#InvocationTargetExceptionClass"},
     {"title": "NewPascal.Base.NoSuchFieldExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#NoSuchFieldExceptionClass"},
     {"title": "NewPascal.Base.NoSuchMethodExceptionClass", "text": "   ", "tags": "", "url": "NewPascal.Base.html#NoSuchMethodExceptionClass"},
     {"title": "NewPascal.GUI.Geom", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.html"},
     {"title": "NewPascal.GUI.Geom.PathIterator", "text": " This interface allows these objects to retrieve the path of their boundary a segment at a time by using 1st through 3rd order Bézier curves, which are lines and quadratic or cubic Bézier splines. Multiple subpaths can be expressed by using a &quot;MOVETO&quot; segment to create a discontinuity in the geometry to move from the end of one subpath to the beginning of the next.    Each subpath can be closed manually by ending the last segment in the subpath on the same coordinate as the beginning &quot;MOVETO&quot; segment for that subpath or by using a &quot;CLOSE&quot; segment to append a line segment from the last point back to the first. Be aware that manually closing an outline as opposed to using a &quot;CLOSE&quot; segment to close the path might result in different line style decorations being used at the end points of the subpath. For example, the BasicStroke object uses a line &quot;JOIN&quot; decoration to connect the first and last points if a &quot;CLOSE&quot; segment is encountered, whereas simply ending the path on the same coordinate as the beginning coordinate results in line &quot;CAP&quot; decorations being used at the ends.   ", "tags": "", "url": "NewPascal.GUI.Geom.PathIterator.html"},
     {"title": "NewPascal.GUI.Geom.PathIterator.WindingRule", "text": "       the winding rule", "tags": "", "url": "NewPascal.GUI.Geom.PathIterator.html#WindingRule"},
     {"title": "NewPascal.GUI.Geom.PathIterator.IsDone", "text": "     True if all the segments have been read; False otherwise.", "tags": "", "url": "NewPascal.GUI.Geom.PathIterator.html#IsDone"},
     {"title": "NewPascal.GUI.Geom.PathIterator.Next", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.PathIterator.html#Next"},
     {"title": "NewPascal.GUI.Geom.PathIterator.CurrentSegment", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.PathIterator.html#CurrentSegment"},
     {"title": "NewPascal.GUI.Geom.AffineTransform", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_IDENTITY", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_IDENTITY"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_TRANSLATION", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_TRANSLATION"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_UNIFORM_SCALE", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_UNIFORM_SCALE"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_GENERAL_SCALE", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_GENERAL_SCALE"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_MASK_SCALE", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_MASK_SCALE"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_FLIP", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_FLIP"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_QUADRANT_ROTATION", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_QUADRANT_ROTATION"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_GENERAL_ROTATION", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_GENERAL_ROTATION"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_MASK_ROTATION", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_MASK_ROTATION"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TYPE_GENERAL_TRANSFORM", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TYPE_GENERAL_TRANSFORM"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.M00", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#M00"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.M10", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#M10"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.M01", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#M01"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.M11", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#M11"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.M02", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#M02"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.M12", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#M12"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.State", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#State"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.APPLY_IDENTITY", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#APPLY_IDENTITY"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.APPLY_TRANSLATE", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#APPLY_TRANSLATE"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.APPLY_SCALE", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#APPLY_SCALE"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.APPLY_SHEAR", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#APPLY_SHEAR"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.Create", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#Create"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.Create", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#Create"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.Create", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#Create"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.Create", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#Create"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.Clone", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#Clone"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.UpdateState", "text": "    ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#UpdateState"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.FlatMatrix", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#FlatMatrix"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.ScaleX", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#ScaleX"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.ScaleY", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#ScaleY"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.ShearX", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#ShearX"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.ShearY", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#ShearY"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TranslateX", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TranslateX"},
     {"title": "NewPascal.GUI.Geom.AffineTransform.TranslateY", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.AffineTransform.html#TranslateY"},
     {"title": "NewPascal.GUI.Geom.WIND_EVEN_ODD", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.html#WIND_EVEN_ODD"},
     {"title": "NewPascal.GUI.Geom.WIND_NON_ZERO", "text": " The non-zero rule specifies that a point lies inside the path if a ray drawn in any direction from that point to infinity is crossed by path segments a different number of times in the counter-clockwise direction than the clockwise direction.   ", "tags": "", "url": "NewPascal.GUI.Geom.html#WIND_NON_ZERO"},
     {"title": "NewPascal.GUI.Geom.SEG_MOVETO", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.html#SEG_MOVETO"},
     {"title": "NewPascal.GUI.Geom.SEG_LINETO", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.html#SEG_LINETO"},
     {"title": "NewPascal.GUI.Geom.SEG_QUADTO", "text": " The curve is interpolated by solving the parametric control equation in the range (t=[0..1]) using the most recently specified (current) point (CP), the first control point (P1), and the final interpolated control point (P2). The parametric control equation for this curve is: P(t) = B(2,0)*CP + B(2,1)*P1 + B(2,2)*P2 0 &lt;= t &lt;= 1    B(n,m) = mth coefficient of nth degree Bernstein polynomial = C(n,m) * t&circ;(m) * (1 - t)&circ;(n-m) C(n,m) = Combinations of n things, taken m at a time = n! / (m! * (n-m)!)   ", "tags": "", "url": "NewPascal.GUI.Geom.html#SEG_QUADTO"},
     {"title": "NewPascal.GUI.Geom.SEG_CUBICTO", "text": " The curve is interpolated by solving the parametric control equation in the range (t=[0..1]) using the most recently specified (current) point (CP), the first control point (P1), the second control point (P2), and the final interpolated control point (P3). The parametric control equation for this curve is: P(t) = B(3,0)*CP + B(3,1)*P1 + B(3,2)*P2 + B(3,3)*P3 0 &lt;= t &lt;= 1    B(n,m) = mth coefficient of nth degree Bernstein polynomial = C(n,m) * t&circ;(m) * (1 - t)&circ;(n-m) C(n,m) = Combinations of n things, taken m at a time = n! / (m! * (n-m)!)    This form of curve is commonly known as a Bézier curve.   ", "tags": "", "url": "NewPascal.GUI.Geom.html#SEG_CUBICTO"},
     {"title": "NewPascal.GUI.Geom.SEG_CLOSE", "text": "   ", "tags": "", "url": "NewPascal.GUI.Geom.html#SEG_CLOSE"}
]};
